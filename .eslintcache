[{"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/index.tsx":"1","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/reportWebVitals.ts":"2","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/App.tsx":"3","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/config/router.tsx":"4","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectSettings.tsx":"5","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Project.tsx":"6","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Projects.tsx":"7","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/providers/ReactQueryProvider.tsx":"8","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/shared/api.ts":"9","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/ProjectCard.tsx":"10","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TaskCard.tsx":"11","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TestUserSelector/index.tsx":"12","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TestUserSelector/testUsers.ts":"13","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectCreate.tsx":"14","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/Modal/index.tsx":"15","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectJoin.tsx":"16","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/CreateTask.tsx":"17","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/ProjectMembers/index.tsx":"18","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/TaskDetail.tsx":"19","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/config/constants.ts":"20","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Invitation.tsx":"21","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/providers/UserProvider.tsx":"22"},{"size":500,"mtime":1613753661702,"results":"23","hashOfConfig":"24"},{"size":425,"mtime":1613753661702,"results":"25","hashOfConfig":"24"},{"size":479,"mtime":1613753661700,"results":"26","hashOfConfig":"24"},{"size":701,"mtime":1613753661701,"results":"27","hashOfConfig":"24"},{"size":199,"mtime":1613753661703,"results":"28","hashOfConfig":"24"},{"size":4675,"mtime":1613753661703,"results":"29","hashOfConfig":"24"},{"size":2324,"mtime":1613753661703,"results":"30","hashOfConfig":"24"},{"size":404,"mtime":1613753661702,"results":"31","hashOfConfig":"24"},{"size":3395,"mtime":1613754124585,"results":"32","hashOfConfig":"24"},{"size":507,"mtime":1613753661701,"results":"33","hashOfConfig":"24"},{"size":495,"mtime":1613753661701,"results":"34","hashOfConfig":"24"},{"size":2256,"mtime":1613753661701,"results":"35","hashOfConfig":"24"},{"size":336,"mtime":1613753661701,"results":"36","hashOfConfig":"24"},{"size":1252,"mtime":1613753661703,"results":"37","hashOfConfig":"24"},{"size":1040,"mtime":1613753661700,"results":"38","hashOfConfig":"24"},{"size":2043,"mtime":1613753661703,"results":"39","hashOfConfig":"24"},{"size":1659,"mtime":1613753661703,"results":"40","hashOfConfig":"24"},{"size":951,"mtime":1613753661701,"results":"41","hashOfConfig":"24"},{"size":1711,"mtime":1613753661703,"results":"42","hashOfConfig":"24"},{"size":137,"mtime":1613754167909,"results":"43","hashOfConfig":"24"},{"size":1944,"mtime":1613753661703,"results":"44","hashOfConfig":"24"},{"size":533,"mtime":1613753661702,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"h4s7qb",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/index.tsx",[],["98","99"],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/reportWebVitals.ts",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/App.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/config/router.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectSettings.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Project.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Projects.tsx",["100"],"import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { getProjects } from '../shared/api';\nimport { Project } from '../shared/types';\nimport ProjectCard from '../components/ProjectCard';\nimport Modal from '../components/Modal';\nimport ProjectJoin from './ProjectJoin';\nimport ProjectCreate from './ProjectCreate';\n\nconst Projects = () => {\n  const { data: projects, refetch, isLoading, isError } = useQuery<Project[]>('getProjects', () => getProjects());\n\n  const [joinModalOpen, setJoinModal] = useState<boolean>(false);\n  const [createProjectModalOpen, setCreateProjectModalOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    refetch();\n  }, [joinModalOpen, createProjectModalOpen]);\n\n  if (projects && !isError && !isLoading) {\n    return (\n      <div className=\"bg-blue-100 h-screen p-4\">\n        {joinModalOpen && (\n          <Modal setModalOpen={setJoinModal} title=\"Join project\" open={joinModalOpen}>\n            <ProjectJoin closeModal={() => setJoinModal(false)} />\n          </Modal>\n        )}\n        {createProjectModalOpen && (\n          <Modal setModalOpen={setCreateProjectModalOpen} title=\"Create Project\" open={createProjectModalOpen}>\n            <ProjectCreate closeModal={() => setCreateProjectModalOpen(false)} />\n          </Modal>\n        )}\n        <div className=\"flex justify-between\">\n          <h1>Projects overview</h1>\n          <div>\n            <button className=\"p-2 bg-blue-900 rounded shadow text-white leading-loose mr-2\" onClick={() => setJoinModal(true)}>\n              Join project\n            </button>\n            <button\n              data-testid=\"actions-create-project\"\n              className=\"p-2 bg-green-500 rounded shadow text-white leading-loose\"\n              onClick={() => setCreateProjectModalOpen(true)}\n            >\n              Create project\n            </button>\n          </div>\n        </div>\n\n        {projects.length === 0 && (\n          <div className=\"grid grid-cols-3 gap-2 mt-4\">\n            <p>No projects found</p>\n          </div>\n        )}\n        {projects.length > 0 && (\n          <div className=\"grid grid-cols-3 gap-2 mt-4\">{projects && projects.map((p) => <ProjectCard key={p.id} {...p} />)}</div>\n        )}\n      </div>\n    );\n  }\n\n  return <>Loading...</>;\n};\n\nexport default Projects;\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/providers/ReactQueryProvider.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/shared/api.ts",["101"],"import { Project, User } from './types';\nimport axios, { AxiosRequestConfig } from 'axios';\nimport { TEST_USERS_ENABLED } from '../config/constants';\n\nconst BACKEND_URL = 'http://localhost:8080/api';\nconst PROJECT_ROUTE = '/projects';\nconst ME_ROUTE = '/me';\nconst INVITATION_ROUTE = '/invitation';\n\nconst APIconfig: AxiosRequestConfig = {\n  headers: {\n    ['Content-Type']: 'application/json',\n  },\n};\n\nconsole.log(TEST_USERS_ENABLED);\nif (TEST_USERS_ENABLED) {\n  const currentUserId = localStorage.getItem('current_test_user_id') || '1';\n  APIconfig.headers['test-user'] = currentUserId;\n}\n\nexport const getCurrentUser = async () => {\n  try {\n    const { data } = await axios.get<User>(`${BACKEND_URL}${ME_ROUTE}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getProject = async (projectId?: string) => {\n  try {\n    const { data } = await axios.get<Project>(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getProjectByInvitation = async (invitationCode: string) => {\n  try {\n    const { data } = await axios.get<Project>(`${BACKEND_URL}${INVITATION_ROUTE}/${invitationCode}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const getProjects = async () => {\n  try {\n    const { data } = await axios.get<Project[]>(`${BACKEND_URL}${PROJECT_ROUTE}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const createProject = async (projectName: string) => {\n  try {\n    const { data } = await axios.post(`${BACKEND_URL}${PROJECT_ROUTE}`, { name: projectName }, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const joinProjectByInvitationCode = async (invitationCode: string): Promise<Project> => {\n  try {\n    const { data } = await axios.put(`${BACKEND_URL}${INVITATION_ROUTE}/${invitationCode}/join`, {}, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const deleteProject = async (projectId: string) => {\n  try {\n    const { data } = await axios.delete(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const createTask = async (projectId: string, name: string, description?: string) => {\n  try {\n    const { data } = await axios.post(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}/tasks`, { name, description }, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const assignTask = async (projectId: string, taskId: string, assigneeId: string) => {\n  try {\n    const { data } = await axios.put(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}/tasks/${taskId}/assign`, { assigneeId }, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const updateTask = async (projectId: string, taskId: string, taskUpdate: any) => {\n  try {\n    const { data } = await axios.put(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}/tasks/${taskId}`, taskUpdate, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n\nexport const deleteTask = async (projectId: string, taskId: string) => {\n  try {\n    const { data } = await axios.delete(`${BACKEND_URL}${PROJECT_ROUTE}/${projectId}/tasks/${taskId}`, APIconfig);\n    return data;\n  } catch (e) {\n    throw new Error(e);\n  }\n};\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/ProjectCard.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TaskCard.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TestUserSelector/index.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/TestUserSelector/testUsers.ts",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectCreate.tsx",["102"],"import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { createProject } from '../shared/api';\n\ntype FormData = {\n  name: string;\n};\n\nconst ProjectCreate: React.FC<{ closeModal: () => void }> = ({ closeModal }) => {\n  const { register, handleSubmit, errors } = useForm<FormData>();\n  const { mutate, reset, isSuccess } = useMutation((projectName: string) => createProject(projectName));\n\n  const onSubmit = handleSubmit(({ name }) => {\n    mutate(name);\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      reset();\n      closeModal();\n    }\n  }, [isSuccess, reset, closeModal]);\n\n  return (\n    <form className=\"flex flex-col w-full m-auto\" onSubmit={onSubmit}>\n      <label className=\"text-gray-600\">Project Name</label>\n      <input\n        data-testid=\"field-project-name\"\n        autoFocus\n        className=\"bg-gray-200 border-gray-400 rounded px-3 pt-2 pb-2 focus:border-indigo-400 mt-2\"\n        name=\"name\"\n        ref={register}\n      />\n      <button data-testid=\"actions-confirm-create-project\" className=\"p-2 bg-green-500 rounded shadow text-white mt-2\" type=\"submit\">\n        Create project\n      </button>\n    </form>\n  );\n};\n\nexport default ProjectCreate;\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/Modal/index.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/ProjectJoin.tsx",["103","104","105"],"import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { getProjectByInvitation, joinProjectByInvitationCode } from '../shared/api';\n\ntype FormData = {\n  invitationCode: string;\n};\n\nconst ProjectJoin: React.FC<{ closeModal: () => void }> = ({ closeModal }) => {\n  const { register, handleSubmit, errors } = useForm<FormData>();\n  const { mutate, data, reset, isLoading, isError } = useMutation('getProjectByInvitation', (invitationCode: string) =>\n    getProjectByInvitation(invitationCode)\n  );\n\n  const { mutate: joinMutation, isSuccess, reset: resetJoin, data: joinData } = useMutation(\n    'joinProjectByInvitationCode',\n    (invitationCode: string) => joinProjectByInvitationCode(invitationCode)\n  );\n\n  const onSubmit = handleSubmit(({ invitationCode }) => {\n    mutate(invitationCode);\n  });\n\n  const onJoin = (invitationCode: string) => {\n    joinMutation(invitationCode);\n  };\n\n  useEffect(() => {\n    if (isSuccess) {\n      closeModal();\n    }\n  }, [isSuccess, joinData, closeModal]);\n\n  return (\n    <form className=\"flex flex-col w-full\" onSubmit={onSubmit}>\n      <br />\n      <label className=\"text-gray-600\">Enter your invitation code</label>\n      <input autoFocus className=\"bg-gray-200 rounded px-3 pt-2 pb-2 focus:border-indigo-400 mt-2\" name=\"invitationCode\" ref={register} />\n      {isError && !isLoading && <p className=\"text-red-600 mt-2\">Something went wrong fetching your project</p>}\n      <button className=\"p-2 bg-green-500 rounded shadow text-white mt-2\" type=\"submit\">\n        Fetch project\n      </button>\n\n      {data && (\n        <div className=\"text-center mt-4\">\n          <p className=\"text-green-600\">Project {data.name} loaded</p>\n          <p>Do you want to join?</p>\n          <button className=\"p-2 bg-green-500 rounded shadow text-white mt-2\" type=\"button\" onClick={() => onJoin(data?.invitationCode)}>\n            Join Project\n          </button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default ProjectJoin;\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/CreateTask.tsx",["106"],"import React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useMutation } from 'react-query';\nimport { createTask } from '../shared/api';\n\ntype FormData = {\n  name: string;\n  description?: string;\n};\n\nconst CreateTask: React.FC<{ closeModal: () => void; projectId: string }> = ({ closeModal, projectId }) => {\n  const { register, handleSubmit, errors } = useForm<FormData>();\n  const { mutate, reset, isSuccess, isError } = useMutation<any, any, { name: string; description?: string }>(({ name, description }) =>\n    createTask(projectId, name, description)\n  );\n\n  const onSubmit = handleSubmit(({ name, description }) => {\n    mutate({ name, description });\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      reset();\n      closeModal();\n    }\n  }, [isSuccess, reset, closeModal]);\n\n  return (\n    <form className=\"flex flex-col w-full m-auto\" onSubmit={onSubmit}>\n      <label className=\"text-gray-600 mt-2\">Task Name</label>\n      <input\n        autoFocus\n        className=\"bg-gray-200 border-gray-400 rounded px-3 pt-2 pb-2 focus:border-indigo-400 mt-2\"\n        name=\"name\"\n        ref={register}\n      />\n\n      <label className=\"text-gray-600 mt-2\">Task Description</label>\n      <textarea\n        className=\"bg-gray-200 border-gray-400 rounded px-3 pt-2 pb-2 focus:border-indigo-400 mt-2\"\n        name=\"description\"\n        ref={register}\n      />\n      {isError && <p className=\"text-red-600 mt-2\">You are not allowed to create tasks</p>}\n      <button className=\"p-2 bg-green-500 rounded shadow text-white mt-2\" type=\"submit\">\n        Create task\n      </button>\n    </form>\n  );\n};\n\nexport default CreateTask;\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/components/ProjectMembers/index.tsx",[],["107","108"],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/TaskDetail.tsx",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/config/constants.ts",[],"/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/templates/Invitation.tsx",["109","110","111","112","113"],"import React, { useContext } from 'react';\nimport { useMutation, useQuery } from 'react-query';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { getProjectByInvitation, joinProjectByInvitationCode } from '../shared/api';\nimport { UserContext } from '../providers/UserProvider';\n\nconst Invitation = () => {\n  const { invitationCode } = useParams<{ invitationCode: string }>();\n\n  const history = useHistory();\n  const currentUser = useContext(UserContext);\n  const { data, isLoading, isError } = useQuery('getProjectByInvitation', () => getProjectByInvitation(invitationCode));\n\n  const { mutate: joinMutation, isSuccess, reset: resetJoin, data: joinData } = useMutation(\n    'joinProjectByInvitationCode',\n    (invitationCode: string) => joinProjectByInvitationCode(invitationCode),\n    {\n      onSuccess: () => {\n        if (data) {\n          history.push('/projects/' + data.id);\n        }\n      },\n    }\n  );\n  console.log(data, currentUser);\n\n  if (data?.users.find((u) => u.id === currentUser?.id)) {\n    history.push('/projects/' + data.id);\n  }\n\n  const onJoin = (invitationCode: string) => {\n    joinMutation(invitationCode);\n  };\n\n  if (data) {\n    return (\n      <div className=\"flex flex-col h-screen w-screen justify-center items-center bg-blue-400\">\n        <div className=\"flex flex-col p-4 shadow rounded bg-white w-1/2 text-center\">\n          <h1>{data.admin}</h1>\n          <h1 className=\"bold text-lg\"> invited to join project:</h1>\n          <h1>{data.name}</h1>\n          <br />\n          <p>Do you want to join?</p>\n          <button\n            className=\"p-2 bg-green-500 rounded shadow text-white mt-2 w-1/2 m-auto\"\n            type=\"button\"\n            data-testid=\"actions-join-project\"\n            onClick={() => onJoin(data?.invitationCode)}\n          >\n            Join Project\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return <p>Loading...</p>;\n};\n\nexport default Invitation;\n","/Users/juandavidcastellanos/Developer/jdcodes/project-butler/src/providers/UserProvider.tsx",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":18,"column":6,"nodeType":"120","endLine":18,"endColumn":45,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":12,"column":5,"nodeType":"124","messageId":"125","endLine":12,"endColumn":41,"fix":"126"},{"ruleId":"127","severity":1,"message":"128","line":11,"column":35,"nodeType":"129","messageId":"130","endLine":11,"endColumn":41},{"ruleId":"127","severity":1,"message":"128","line":11,"column":35,"nodeType":"129","messageId":"130","endLine":11,"endColumn":41},{"ruleId":"127","severity":1,"message":"131","line":12,"column":25,"nodeType":"129","messageId":"130","endLine":12,"endColumn":30},{"ruleId":"127","severity":1,"message":"132","line":16,"column":51,"nodeType":"129","messageId":"130","endLine":16,"endColumn":60},{"ruleId":"127","severity":1,"message":"128","line":12,"column":35,"nodeType":"129","messageId":"130","endLine":12,"endColumn":41},{"ruleId":"114","replacedBy":"133"},{"ruleId":"116","replacedBy":"134"},{"ruleId":"127","severity":1,"message":"135","line":12,"column":17,"nodeType":"129","messageId":"130","endLine":12,"endColumn":26},{"ruleId":"127","severity":1,"message":"136","line":12,"column":28,"nodeType":"129","messageId":"130","endLine":12,"endColumn":35},{"ruleId":"127","severity":1,"message":"137","line":14,"column":33,"nodeType":"129","messageId":"130","endLine":14,"endColumn":42},{"ruleId":"127","severity":1,"message":"132","line":14,"column":51,"nodeType":"129","messageId":"130","endLine":14,"endColumn":60},{"ruleId":"127","severity":1,"message":"138","line":14,"column":68,"nodeType":"129","messageId":"130","endLine":14,"endColumn":76},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refetch'. Either include it or remove the dependency array.","ArrayExpression",["141"],"no-useless-computed-key","Unnecessarily computed property ['Content-Type'] found.","Property","unnecessarilyComputedProperty",{"range":"142","text":"143"},"@typescript-eslint/no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'resetJoin' is assigned a value but never used.",["139"],["140"],"'isLoading' is assigned a value but never used.","'isError' is assigned a value but never used.","'isSuccess' is assigned a value but never used.","'joinData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},[357,373],"'Content-Type'","Update the dependencies array to be: [joinModalOpen, createProjectModalOpen, refetch]",{"range":"146","text":"147"},[697,736],"[joinModalOpen, createProjectModalOpen, refetch]"]